q()
q()
a <- available.packages()
head(rownames(a),3)
head(rownames(a),30)
install.packages("slidify")
q()
q()
install.packages("slidify")
install.packages("ggplot2")
q()
q()
library(KernSmooth)
q()
q()
q()
q()
swirl()
swirl
load("C:/training/data_science_specialization/R/.RData")
swirl()
q()
q()
x < 1:10
x <- 1:10
x
library(swirl)
package_version("swirl")
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
x <- 1:10
if(x > 5) {
x <- 0
}
}
x <- 1:10
if(x > 5) {
x <- 0
}
x
x <- 1:10
x <- 0
x
x <- 1:10
x > 5
if(x > 5) x <- 0
if(x > 5) { x <- 0 }
x
}
z <- 10
f(3)
x + g(x)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
x + g(x)
f <- function(x) {
z <-10
f(3)
f(3)
swirl()
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("RÂ Programming")
swirl()
Sys.Date
Sys.Date()
mean(c(2,4,5))
swirl()
swirl()
submit()
submit()
swirl()
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){tail(x)}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Hello", "world")
submit()
mad_libs("Lakewood", "numerous", "building")
submit()
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
dl()
d1()
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(t1)
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
q()
packageVersion("swirl")
library(swirl)
rm(list=ls())
ls()
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period
quit
table(plants$Active_Growth_Period)
str(plants)
q()
rm(list=ls())
swirl()
packageVersion("swirl")
library(swirl)
swirl()
sample()
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips <- sample(1:100, c(0,1), replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips()
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pos
my_pois
cm <- colMeans(my_pois)
hist(cm)
q()
library(swirl)
rm(list=ls())
ls()
swiril()
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
| Recreate the plot with the label of the x-axis set to "Speed".
> plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
play()
head(mtcars)
nxt()
?boxplot
boxplot(mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
0
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
?rnorm
?set.seed
?rpois
?rbinom
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
q()
getwd()
rm(list=ls())
ls()
setwd("C:/training/data_science_specialization/R")
getwd()
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("BB", "heart failure")
best("NY", "heart attack")
best("NY", "hert attack")
source("rankhospital.R")
head(texas)
rankhospital("MD", "heart failure:, 5)
q
0
dffdsf
fdsfdsfsd
exit
quit
exit()
232
321vsddfds e w
rankhospital("MD", "heart failure", 5)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", "5000")
source("rankall.R")
head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
head(rankall("heart attack"))
head(rankall("heart attack"))
ls()
rm(list=ls())
()
ls()
source("rankall.R")
ls()
head(rankall("heart attack", 20), 10)
ls()
rankall("pneumonia", "worst")
source("rankhospital.R")
rankhospital("MN", "heart attack", 4)
rankhospital("TX", "heart attack", 4)
rankhospital("TX", "heart failure", 4)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
getwd()
tail(rankall("TX", "pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("TX", "pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("TX", "pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure'), 10)
tail(rankall("heart failure"), 10)
source("best.R")
ls()
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
q()
library(datasets)
data(mtcars)
boxplot(mpg ~ am, data=mtcars, col = (c("blue","red")), xlab="Transmission Type", ylab="MPG", main="Figure 1. MPG vs. Transmission Type")
boxplot(mpg ~ am, data=mtcars, col = (c("blue","red")), xlab="Transmission Type", ylab="MPG", main="MPG vs. Transmission Type")
boxplot(mpg ~ am, data=mtcars, xlab="Transmission Type", ylab="MPG", main="MPG vs. Transmission Type")
mtcars$am   <- factor(mtcars$am,labels=c("Automatic","Manual"))
boxplot(mpg ~ am, data=mtcars, xlab="Transmission Type", ylab="MPG", main="MPG vs. Transmission Type")
library(datasets)
data(mtcars)
head(mtcars)
mtcars$cyl  <- factor(mtcars$cyl)
mtcars$vs   <- factor(mtcars$vs)
mtcars$am   <- factor(mtcars$am,labels=c("Automatic","Manual"))
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
boxplot(mpg ~ am, data=mtcars, col = (c("blue","red")), xlab="Transmission Type", ylab="MPG", main="Figure 1. MPG vs. Transmission Type")
pairs(mtcars, panel=panel.smooth, main="Pair Graph of Motor Trend Car Road Tests")
mtcars_vars <- mtcars[, c(1, 6, 7, 9)]
mar.orig <- par()$mar  # save the original values
par(mar = c(2, 2, 2, 2))  # set your new values
boxplot(mtcars_vars[mtcars_vars$am == 1, ]$mpg, mtcars_vars[mtcars_vars$am ==
0, ]$mpg, names = c("Manual", "Automatic"))
install.packages("shiny")
library(shiny)
runApp('myApp')
runApp('myApp')
?builder
install.packages("leaflet")
install.packages("plotly")
library(plotly)
install.packages("tidyr")
install.packages("tidyr")
install.packages("dplyr")
install.packages("plotly")
install.packages("webshot")
library(plotly)
install.packages("shiny")
library(shiny)
runApp('shinyapp')
